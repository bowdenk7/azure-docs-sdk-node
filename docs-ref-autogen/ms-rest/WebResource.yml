### YamlMime:UniversalReference
items:
  - uid: ms-rest.WebResource
    id: ms-rest.WebResource
    name: WebResource
    summary: "Creates a new WebResource object.\r\rThis class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\rproperties to initiate a request."
    fullName: ms-rest.WebResource
    source:
      id: ms-rest.WebResource
      path: runtime\ms-rest\lib\webResource.js
      startLine: 21
      remote:
        branch: jsdoc
        path: runtime\ms-rest\lib\webResource.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'ms-rest.WebResource.#ctor'
      - 'ms-rest.WebResource#pipeInput'
      - 'ms-rest.WebResource#validateRequestProperties'
      - 'ms-rest.WebResource#prepare'
    langs:
      - js
  - id: 'ms-rest.WebResource.#ctor'
    uid: 'ms-rest.WebResource.#ctor'
    parent: ms-rest.WebResource
    name: WebResource()
    fullName: ms-rest.WebResource.WebResource()
    summary: ''
    type: Constructor
    syntax:
      content: new WebResource()
    langs:
      - js
  - uid: 'ms-rest.WebResource#pipeInput'
    id: 'ms-rest.WebResource#pipeInput'
    parent: ms-rest.WebResource
    name: 'pipeInput(inputStream, outputStream)'
    summary: "Hook up the given input stream to a destination output stream if the WebResource method\rrequires a request body and a body is not already set."
    fullName: 'ms-rest.WebResource.pipeInput(inputStream, outputStream)'
    type: Function
    syntax:
      parameters:
        - id: inputStream
          type:
            - ms-rest.Stream
          description: the stream to pipe from
        - id: outputStream
          type:
            - ms-rest.Stream
          description: the stream to pipe to
      return:
        description: destStream
      content: 'function pipeInput(inputStream, outputStream)'
    langs:
      - js
  - uid: 'ms-rest.WebResource#validateRequestProperties'
    id: 'ms-rest.WebResource#validateRequestProperties'
    parent: ms-rest.WebResource
    name: validateRequestProperties()
    summary: "Validates that the required properties such as method, url, headers['Content-Type'], \rheaders['accept-language'] are defined. It will throw an error if one of the above\rmentioned properties are not defined."
    fullName: ms-rest.WebResource.validateRequestProperties()
    type: Function
    syntax:
      content: function validateRequestProperties()
    langs:
      - js
  - uid: 'ms-rest.WebResource#prepare'
    id: 'ms-rest.WebResource#prepare'
    parent: ms-rest.WebResource
    name: prepare(options)
    summary: Prepares the request.
    fullName: ms-rest.WebResource.prepare(options)
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: >-
            The request options that should be provided to send a request
            successfully
        - id: options.method
          type:
            - string
          description: >-
            The HTTP request method. Valid values are 'GET', 'PUT', 'HEAD',
            'DELETE', 'OPTIONS', 'POST', 'PATCH'.
        - id: options.url
          type:
            - string
          description: "The request url. It may or may not have query parameters in it. \rEither provide the 'url' or provide the 'pathTemplate' in the options object. Both the options are mutually exclusive."
          optional: true
        - id: options.queryParameters
          type:
            - object
          description: "A dictionary of query parameters to be appended to the url, where \rthe 'key' is the 'query-parameter-name' and the 'value' is the 'query-parameter-value'. \rThe 'query-parameter-value' can be of type 'string' or it can be of type 'object'. \rThe 'object' format should be used when you want to skip url encoding. While using the object format, \rthe object must have a property named value which provides the 'query-parameter-value'.\rExample: \r   - query-parameter-value in 'object' format: { 'query-parameter-name': { value: 'query-parameter-value', skipUrlEncoding: true } }\r   - query-parameter-value in 'string' format: { 'query-parameter-name': 'query-parameter-value'}.\rNote: 'If options.url already has some query parameters, then the value provided in options.queryParameters will be appended to the url."
          optional: true
        - id: options.pathTemplate
          type:
            - string
          description: "The path template of the request url. Either provide the 'url' or provide the 'pathTemplate' \rin the options object. Both the options are mutually exclusive.\rExample: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'"
          optional: true
        - id: options.baseUrl
          type:
            - string
          description: "The base url of the request. Default value is: 'https://management.azure.com'. This is applicable only with \roptions.pathTemplate. If you are providing options.url then it is expected that you provide the complete url."
          optional: true
        - id: options.pathParameters
          type:
            - object
          description: "A dictionary of path parameters that need to be replaced with actual values in the pathTemplate.\rHere the key is the 'path-parameter-name' and the value is the 'path-parameter-value'. \rThe 'path-parameter-value' can be of type 'string'  or it can be of type 'object'.\rThe 'object' format should be used when you want to skip url encoding. While using the object format, \rthe object must have a property named value which provides the 'path-parameter-value'.\rExample: \r   - path-parameter-value in 'object' format: { 'path-parameter-name': { value: 'path-parameter-value', skipUrlEncoding: true } }\r   - path-parameter-value in 'string' format: { 'path-parameter-name': 'path-parameter-value' }."
          optional: true
        - id: options.formData
          type:
            - object
          description: "A dictionary of key-value pairs for the formData object.\rIf the expected 'Content-Type' to be set is 'application/x-www-form-urlencoded' then please set it in the options.headers object else the\r'Content-Type' header will be set to 'multipart/form-data'."
          optional: true
        - id: options.headers
          type:
            - object
          description: "A dictionary of request headers that need to be applied to the request.\rHere the key is the 'header-name' and the value is the 'header-value'. The header-value MUST be of type string.\r - ContentType must be provided with the key name as 'Content-Type'. Default value 'application/json; charset=utf-8'.\r - 'Transfer-Encoding' is set to 'chunked' by default if 'options.bodyIsStream' is set to true.\r - 'Content-Type' is set to 'application/octet-stream' by default if 'options.bodyIsStream' is set to true.\r - 'accept-language' by default is set to 'en-US'\r - 'x-ms-client-request-id' by default is set to a new Guid. To not generate a guid for the request, please set options.disableClientRequestId to true"
          optional: true
        - id: options.disableClientRequestId
          type:
            - boolean
          description: >-
            When set to true, instructs the client to not set
            'x-ms-client-request-id' header to a new Guid().
          optional: true
        - id: options.body
          type:
            - object
            - string
            - boolean
            - array
            - number
            - ms-rest.null
            - undefined
          description: >-
            The request body. It can be of any type. This method will
            JSON.stringify() the request body.
          optional: true
        - id: options.serializationMapper
          type:
            - object
          description: Provides information on how to serialize the request body.
          optional: true
        - id: options.deserializationMapper
          type:
            - object
          description: Provides information on how to deserialize the response body.
          optional: true
        - id: options.disableJsonStringifyOnBody
          type:
            - boolean
          description: >-
            Indicates whether this method should JSON.stringify() the request
            body. Default value: false.
          optional: true
        - id: options.bodyIsStream
          type:
            - boolean
          description: >-
            Indicates whether the request body is a stream (useful for file
            upload scenarios).
          optional: true
      return:
        type:
          - object
        description: >-
          WebResource Returns the prepared WebResource (HTTP Request) object
          that needs to be given to the request pipeline.
      content: function prepare(options)
    langs:
      - js
