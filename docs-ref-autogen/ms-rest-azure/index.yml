### YamlMime:UniversalReference
items:
  - uid: ms-rest-azure
    name: ms-rest-azure
    langs:
      - js
    type: package
    summary: ''
    children:
      - ms-rest-azure.SubscriptionClient
      - ms-rest-azure.Tenants
      - ms-rest-azure.Subscriptions
      - ms-rest-azure.Location list operation response.
      - ms-rest-azure.PollingState
      - ms-rest-azure.UserTokenCredentials
      - ms-rest-azure.TopicCredentials
      - ms-rest-azure.MSITokenCredentials
      - ms-rest-azure.MSIAppServiceTokenCredentials
      - ms-rest-azure.KeyVaultCredentials
      - ms-rest-azure.DeviceTokenCredentials
      - ms-rest-azure.CognitiveServicesCredentials
      - ms-rest-azure.ApplicationTokenCredentials
      - ms-rest-azure.BaseResource
      - ms-rest-azure.AzureServiceClient
      - ms-rest-azure.AzureEnvironment
      - ms-rest-azure.create
      - ms-rest-azure.checkRPNotRegisteredError
      - ms-rest-azure.extractSubscriptionUrl
      - ms-rest-azure.registerRP
      - ms-rest-azure.getRegistrationStatus
      - ms-rest-azure.interactive
      - ms-rest-azure.withUsernamePassword
      - ms-rest-azure.withServicePrincipalSecret
      - ms-rest-azure.withAuthFile
      - ms-rest-azure.withAuthFileWithAuthResponse
      - ms-rest-azure.withMSI
      - ms-rest-azure.withAppServiceMSI
      - ms-rest-azure.generateUuid
  - uid: ms-rest-azure.create
    id: ms-rest-azure.create
    name: create(retryTimeoutInSec)
    summary: "Creates a filter that verifies whether the request failed due to RP not being registered.\rIt tries to register the RP and after successful registration it retries the original request."
    fullName: ms-rest-azure.create(retryTimeoutInSec)
    type: Function
    syntax:
      parameters:
        - id: retryTimeoutInSec
          type:
            - number
          description: The retry timeout in seconds. Default is 30 seconds.
      content: function create(retryTimeoutInSec)
    langs:
      - js
  - uid: ms-rest-azure.checkRPNotRegisteredError
    id: ms-rest-azure.checkRPNotRegisteredError
    name: checkRPNotRegisteredError(body)
    summary: "Validates the error code and message associated with 409 response status code. If it matches to that of \rRP not registered then it returns the name of the RP else returns undefined."
    fullName: ms-rest-azure.checkRPNotRegisteredError(body)
    type: Function
    syntax:
      parameters:
        - id: body
          type:
            - string
          description: The response body received after making the original request.
      return:
        type:
          - string
        description: result The name of the RP if condition is satisfied else undefined.
      content: function checkRPNotRegisteredError(body)
    langs:
      - js
  - uid: ms-rest-azure.extractSubscriptionUrl
    id: ms-rest-azure.extractSubscriptionUrl
    name: extractSubscriptionUrl(url)
    summary: "Extracts the first part of the URL, just after subscription: \rhttps://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/"
    fullName: ms-rest-azure.extractSubscriptionUrl(url)
    type: Function
    syntax:
      parameters:
        - id: url
          type:
            - string
          description: The original request url
      return:
        type:
          - string
        description: urlPrefix The url prefix as explained above.
      content: function extractSubscriptionUrl(url)
    langs:
      - js
  - uid: ms-rest-azure.registerRP
    id: ms-rest-azure.registerRP
    name: 'registerRP(urlPrefix, provider, originalRequest, callback)'
    summary: Registers the given provider.
    fullName: 'ms-rest-azure.registerRP(urlPrefix, provider, originalRequest, callback)'
    type: Function
    syntax:
      parameters:
        - id: urlPrefix
          type:
            - string
          description: >-
            https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/
        - id: provider
          type:
            - string
          description: The provider name to be registered.
        - id: originalRequest
          type:
            - object
          description: "The original request sent by the user that returned a 409 response\rwith a message that the provider is not registered."
        - id: callback
          type:
            - ms-rest-azure.registrationCallback
          description: The callback that handles the RP registration
      content: 'function registerRP(urlPrefix, provider, originalRequest, callback)'
    langs:
      - js
  - uid: ms-rest-azure.getRegistrationStatus
    id: ms-rest-azure.getRegistrationStatus
    name: 'getRegistrationStatus(url, originalRequest, callback)'
    summary: "Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\rPolling will happen till the registrationState property of the response body is 'Registered'."
    fullName: 'ms-rest-azure.getRegistrationStatus(url, originalRequest, callback)'
    type: Function
    syntax:
      parameters:
        - id: url
          type:
            - string
          description: The request url for polling
        - id: originalRequest
          type:
            - object
          description: "The original request sent by the user that returned a 409 response\rwith a message that the provider is not registered."
        - id: callback
          type:
            - ms-rest-azure.registrationCallback
          description: The callback that handles the RP registration.
      content: 'function getRegistrationStatus(url, originalRequest, callback)'
    langs:
      - js
  - uid: ms-rest-azure.interactive
    id: ms-rest-azure.interactive
    name: 'interactive(options, optionalCallback)'
    summary: "Provides a url and code that needs to be copy and pasted in a browser and authenticated over there. If successful, the user will get a \rDeviceTokenCredentials object and the list of subscriptions associated with that userId across all the applicable tenants."
    fullName: 'ms-rest-azure.interactive(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeviceTokenCredentials} The DeviceTokenCredentials object.'
        value: '{DeviceTokenCredentials} The DeviceTokenCredentials object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Object representing optional parameters.
          optional: true
        - id: options.clientId
          type:
            - string
          description: "The active directory application client id.\rSee [Active Directory Quickstart for .Net](https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/) \rfor an example."
          optional: true
        - id: options.tokenAudience
          type:
            - string
          description: "The audience for which the token is requested. Valid value is 'graph'.If tokenAudience is provided \rthen domain should also be provided its value should not be the default 'common' tenant. It must be a string (preferrably in a guid format)."
          optional: true
        - id: options.domain
          type:
            - string
          description: >-
            The domain or tenant id containing this application. Default value
            is 'common'.
          optional: true
        - id: options.environment
          type:
            - ms-rest-azure.AzureEnvironment
          description: >-
            The azure environment to authenticate with. Default environment is
            "Public Azure".
          optional: true
        - id: options.tokenCache
          type:
            - object
          description: The token cache. Default value is the MemoryCache object from adal.
          optional: true
        - id: options.language
          type:
            - object
          description: >-
            The language code specifying how the message should be localized to.
            Default value 'en-us'.
          optional: true
        - id: options.userCodeResponseLogger
          type:
            - object
            - function
          description: "A logger that logs the user code response message required for interactive login. When\rthis option is specified the usercode response message will not be logged to console."
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                           - The Error object if an error occurred, null otherwise.\r                {DeviceTokenCredentials} [credentials]   - The DeviceTokenCredentials object.\r                {Array}                [subscriptions]   - List of associated subscriptions across all the applicable tenants.\r   {Promise} A promise is returned."
      content: 'function interactive(options, optionalCallback)'
    langs:
      - js
  - uid: ms-rest-azure.withUsernamePassword
    id: ms-rest-azure.withUsernamePassword
    name: 'withUsernamePassword(username, password, options, optionalCallback)'
    summary: "Provides a UserTokenCredentials object and the list of subscriptions associated with that userId across all the applicable tenants. \rThis method is applicable only for organizational ids that are not 2FA enabled otherwise please use interactive login."
    fullName: >-
      ms-rest-azure.withUsernamePassword(username, password, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{UserTokenCredentials} The UserTokenCredentials object.'
        value: '{UserTokenCredentials} The UserTokenCredentials object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: username
          type:
            - string
          description: The user name for the Organization Id account.
        - id: password
          type:
            - string
          description: The password for the Organization Id account.
        - id: options
          type:
            - object
          description: Object representing optional parameters.
          optional: true
        - id: options.clientId
          type:
            - string
          description: "The active directory application client id. \rSee [Active Directory Quickstart for .Net](https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/) \rfor an example."
          optional: true
        - id: options.tokenAudience
          type:
            - string
          description: "The audience for which the token is requested. Valid value is 'graph'. If tokenAudience is provided \rthen domain should also be provided and its value should not be the default 'common' tenant. It must be a string (preferrably in a guid format)."
          optional: true
        - id: options.domain
          type:
            - string
          description: >-
            The domain or tenant id containing this application. Default value
            'common'.
          optional: true
        - id: options.environment
          type:
            - ms-rest-azure.AzureEnvironment
          description: The azure environment to authenticate with.
          optional: true
        - id: options.authorizationScheme
          type:
            - string
          description: The authorization scheme. Default value is 'bearer'.
          optional: true
        - id: options.tokenCache
          type:
            - object
          description: The token cache. Default value is the MemoryCache object from adal.
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                         - The Error object if an error occurred, null otherwise.\r                {UserTokenCredentials} [credentials]   - The UserTokenCredentials object.\r                {Array}                [subscriptions] - List of associated subscriptions across all the applicable tenants.\r   {Promise} A promise is returned."
      content: >-
        function withUsernamePassword(username, password, options,
        optionalCallback)
    langs:
      - js
  - uid: ms-rest-azure.withServicePrincipalSecret
    id: ms-rest-azure.withServicePrincipalSecret
    name: >-
      withServicePrincipalSecret(clientId, secret, domain, options,
      optionalCallback)
    summary: >-
      Provides an ApplicationTokenCredentials object and the list of
      subscriptions associated with that servicePrinicpalId/clientId across all
      the applicable tenants.
    fullName: >-
      ms-rest-azure.withServicePrincipalSecret(clientId, secret, domain,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationTokenCredentials} The ApplicationTokenCredentials object.'
        value: '{ApplicationTokenCredentials} The ApplicationTokenCredentials object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: "The active directory application client id also known as the SPN (ServicePrincipal Name). \rSee [Active Directory Quickstart for .Net](https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/) \rfor an example."
        - id: secret
          type:
            - string
          description: The application secret for the service principal.
        - id: domain
          type:
            - string
          description: The domain or tenant id containing this application.
        - id: options
          type:
            - object
          description: Object representing optional parameters.
          optional: true
        - id: options.tokenAudience
          type:
            - string
          description: >-
            The audience for which the token is requested. Valid value is
            'graph'.
          optional: true
        - id: options.environment
          type:
            - ms-rest-azure.AzureEnvironment
          description: The azure environment to authenticate with.
          optional: true
        - id: options.authorizationScheme
          type:
            - string
          description: The authorization scheme. Default value is 'bearer'.
          optional: true
        - id: options.tokenCache
          type:
            - object
          description: The token cache. Default value is the MemoryCache object from adal.
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                               - The Error object if an error occurred, null otherwise.\r                {ApplicationTokenCredentials} [credentials]  - The ApplicationTokenCredentials object.\r                {Array}                [subscriptions]       - List of associated subscriptions across all the applicable tenants.\r   {Promise} A promise is returned."
      content: >-
        function withServicePrincipalSecret(clientId, secret, domain, options,
        optionalCallback)
    langs:
      - js
  - uid: ms-rest-azure.withAuthFile
    id: ms-rest-azure.withAuthFile
    name: 'withAuthFile(options, optionalCallback)'
    summary: "Before using this method please install az cli from https://github.com/Azure/azure-cli/releases. Then execute `az ad sp create-for-rbac --sdk-auth > ${yourFilename.json}`.\rIf you want to create the sp for a different cloud/environment then please execute:\r1. az cloud list\r2. az cloud set –n <name of the environment>\r3. az ad sp create-for-rbac --sdk-auth > auth.json\r\rIf the service principal is already created then login with service principal info:\r3. az login --service-principal -u <clientId> -p <clientSecret> -t <tenantId>\r4. az account show --sdk-auth > auth.json \r\rAuthenticates using the service principal information provided in the auth file. This method will set \rthe subscriptionId from the auth file to the user provided environment variable in the options \rparameter or the default 'AZURE_SUBSCRIPTION_ID'."
    fullName: 'ms-rest-azure.withAuthFile(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationTokenCredentials} The ApplicationTokenCredentials object.'
        value: '{ApplicationTokenCredentials} The ApplicationTokenCredentials object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional parameters
          optional: true
        - id: options.filePath
          type:
            - string
          description: "Absolute file path to the auth file. If not provided \rthen please set the environment variable AZURE_AUTH_LOCATION."
          optional: true
        - id: options.subscriptionEnvVariableName
          type:
            - string
          description: "The subscriptionId environment variable \rname. Default is 'AZURE_SUBSCRIPTION_ID'."
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                               - The Error object if an error occurred, null otherwise.\r                {ApplicationTokenCredentials} [credentials]  - The ApplicationTokenCredentials object.\r                {Array}                [subscriptions]       - List of associated subscriptions across all the applicable tenants.\r   {Promise} A promise is returned."
      content: 'function withAuthFile(options, optionalCallback)'
    langs:
      - js
  - uid: ms-rest-azure.withAuthFileWithAuthResponse
    id: ms-rest-azure.withAuthFileWithAuthResponse
    name: withAuthFileWithAuthResponse(options)
    summary: "Before using this method please install az cli from https://github.com/Azure/azure-cli/releases. Then execute `az ad sp create-for-rbac --sdk-auth > ${yourFilename.json}`.\rIf you want to create the sp for a different cloud/environment then please execute:\r1. az cloud list\r2. az cloud set –n <name of the environment>\r3. az ad sp create-for-rbac --sdk-auth > auth.json\r\rIf the service principal is already created then login with service principal info:\r3. az login --service-principal -u <clientId> -p <clientSecret> -t <tenantId>\r4. az account show --sdk-auth > auth.json \r\rAuthenticates using the service principal information provided in the auth file. This method will set \rthe subscriptionId from the auth file to the user provided environment variable in the options \rparameter or the default 'AZURE_SUBSCRIPTION_ID'."
    fullName: ms-rest-azure.withAuthFileWithAuthResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {{credentials: ApplicationTokenCredentials, subscriptions:
          subscriptions[]}} An object with credentials and associated
          subscription info.
        value: >-
          {{credentials: ApplicationTokenCredentials, subscriptions:
          subscriptions[]}} An object with credentials and associated
          subscription info.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional parameters
          optional: true
        - id: options.filePath
          type:
            - string
          description: "Absolute file path to the auth file. If not provided \rthen please set the environment variable AZURE_AUTH_LOCATION."
          optional: true
        - id: options.subscriptionEnvVariableName
          type:
            - string
          description: "The subscriptionId environment variable \rname. Default is 'AZURE_SUBSCRIPTION_ID'."
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned.
      content: function withAuthFileWithAuthResponse(options)
    langs:
      - js
  - uid: ms-rest-azure.withMSI
    id: ms-rest-azure.withMSI
    name: 'withMSI(options, optionalCallback)'
    summary: "Before using this method please install az cli from https://github.com/Azure/azure-cli/releases.\rIf you have an Azure virtual machine provisioned with az cli and has MSI enabled,\ryou can then use this method to get auth tokens from the VM.\r\rTo create a new VM, enable MSI, please execute this command:\raz vm create -g <resource_group_name> -n <vm_name> --assign-identity --image <os_image_name>\rNote: the above command enables a service endpoint on the host, with a default port 50342\r\rTo enable MSI on a already provisioned VM, execute the following command:\raz vm --assign-identity -g <resource_group_name> -n <vm_name> --port <custom_port_number>\r\rTo know more about this command, please execute:\raz vm --assign-identity -h\r\rAuthenticates using the identity service running on an Azure virtual machine.\rThis method makes a request to the authentication service hosted on the VM\rand gets back an access token."
    fullName: 'ms-rest-azure.withMSI(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{object} - tokenResponse.'
        value: '{object} - tokenResponse.'
      - originalTitle: reject
        title: reject
        text: '{Error} - error object.'
        value: '{Error} - error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional parameters
          optional: true
        - id: options.port
          type:
            - string
          description: >-
            port on which the MSI service is running on the host VM. Default
            port is 50342
          optional: true
        - id: options.resource
          type:
            - string
          description: "The resource uri or token audience for which the token is needed.\rFor e.g. it can be:\r- resourcemanagement endpoint \"https://management.azure.com\"(default) \r- management endpoint \"https://management.core.windows.net/\""
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                               - The Error object if an error occurred, null otherwise.\r                {object} [tokenResponse]                     - The tokenResponse (token_type and access_token are the two important properties)\r   {Promise} A promise is returned."
      content: 'function withMSI(options, optionalCallback)'
    langs:
      - js
  - uid: ms-rest-azure.withAppServiceMSI
    id: ms-rest-azure.withAppServiceMSI
    name: 'withAppServiceMSI(options, optionalCallback)'
    summary: Authenticate using the App Service MSI.
    fullName: 'ms-rest-azure.withAppServiceMSI(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{object} - tokenResponse.'
        value: '{object} - tokenResponse.'
      - originalTitle: reject
        title: reject
        text: '{Error} - error object.'
        value: '{Error} - error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional parameters
          optional: true
        - id: options.msiEndpoint
          type:
            - string
          description: "The local URL from which your app can request tokens.\rEither provide this parameter or set the environment varaible `MSI_ENDPOINT`.\rFor example: `MSI_ENDPOINT=\"http://127.0.0.1:41741/MSI/token/\"`"
          optional: true
        - id: options.msiSecret
          type:
            - string
          description: "The secret used in communication between your code and the local MSI agent.\rEither provide this parameter or set the environment varaible `MSI_SECRET`.\rFor example: `MSI_SECRET=\"69418689F1E342DD946CB82994CDA3CB\"`"
          optional: true
        - id: options.resource
          type:
            - string
          description: "The resource uri or token audience for which the token is needed.\rFor example, it can be:\r- resourcemanagement endpoint \"https://management.azure.com\"(default) \r- management endpoint \"https://management.core.windows.net/\""
          optional: true
        - id: options.msiApiVersion
          type:
            - string
          description: >-
            The api-version of the local MSI agent. Default value is
            "2017-09-01".
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter then it returns the callback else returns a Promise.\r\r   {function} optionalCallback(err, credentials)\r                {Error}  [err]                               - The Error object if an error occurred, null otherwise.\r                {object} [tokenResponse]                     - The tokenResponse (token_type and access_token are the two important properties)\r   {Promise} A promise is returned."
      content: 'function withAppServiceMSI(options, optionalCallback)'
    langs:
      - js
  - uid: ms-rest-azure.generateUuid
    id: ms-rest-azure.generateUuid
    name: generateUuid()
    summary: Generated UUID
    fullName: ms-rest-azure.generateUuid()
    type: Function
    syntax:
      return:
        type:
          - string
        description: RFC4122 v4 UUID.
      content: function generateUuid()
    langs:
      - js
references:
  - uid: ms-rest-azure.SubscriptionClient
    name: SubscriptionClient
  - uid: ms-rest-azure.Tenants
    name: Tenants
  - uid: ms-rest-azure.Subscriptions
    name: Subscriptions
  - uid: ms-rest-azure.Location list operation response.
    name: Location list operation response.
  - uid: ms-rest-azure.PollingState
    name: PollingState
  - uid: ms-rest-azure.UserTokenCredentials
    name: UserTokenCredentials
  - uid: ms-rest-azure.TopicCredentials
    name: TopicCredentials
  - uid: ms-rest-azure.MSITokenCredentials
    name: MSITokenCredentials
  - uid: ms-rest-azure.MSIAppServiceTokenCredentials
    name: MSIAppServiceTokenCredentials
  - uid: ms-rest-azure.KeyVaultCredentials
    name: KeyVaultCredentials
  - uid: ms-rest-azure.DeviceTokenCredentials
    name: DeviceTokenCredentials
  - uid: ms-rest-azure.CognitiveServicesCredentials
    name: CognitiveServicesCredentials
  - uid: ms-rest-azure.ApplicationTokenCredentials
    name: ApplicationTokenCredentials
  - uid: ms-rest-azure.BaseResource
    name: BaseResource
  - uid: ms-rest-azure.AzureServiceClient
    name: AzureServiceClient
  - uid: ms-rest-azure.AzureEnvironment
    name: AzureEnvironment
